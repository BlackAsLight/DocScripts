// ==UserScript==
// @name         Doc: Create Trade
// @namespace    https://politicsandwar.com/nation/id=19818
// @version      10.0.3
// @description  Makes script, View Trades, Outbid and Match buttons work.
// @author       BlackAsLight
// @match        https://politicsandwar.com/nation/trade/create/*
// @match        https://politicsandwar.com/index.php?id=27*
// @icon         https://avatars.githubusercontent.com/u/44320105
// @grant        none
// ==/UserScript==
'use strict';
function u(t){return new Promise(e=>setTimeout(()=>e(!0),t))}function s(t,e,n){let i=document.createElement(t);if(typeof e=="function")e(i);else if(e){for(let[m,l]of Object.entries(e))l!=null&&(i[m]=l);n&&n(i)}return i}if(document.querySelector("#Doc_CreateTrade"))throw Error("This script was already injected...");document.body.append(s("div",{id:"Doc_CreateTrade"},t=>t.style.setProperty("display","none")));var{resource:c,p:r,q:o,t:a}=Object.fromEntries(self.location.search.slice(1).split("&").map(t=>{let[e,n]=t.split("="),i=parseFloat(n);return`${i}`=="NaN"?[e,n]:[e,i]}));if(document.querySelector(".alert-success"))if(localStorage.setItem("!Doc_CT1",`${new Date().getTime()+5e3}`),o&&o>1e8&&localStorage.getItem("!Doc_CT2")){let t=self.location.search.slice(1).split("&");t[t.findIndex(e=>e.startsWith("q="))]=`q=${o-1e8}`,localStorage.getItem("!Doc_CT3")&&(t[t.findIndex(e=>e.startsWith("p="))]=`p=${localStorage.getItem("!Doc_CT3")}`,localStorage.removeItem("!Doc_CT3")),self.location.href=self.location.origin+self.location.pathname+"?"+t.join("&")}else self.location.href=`https://politicsandwar.com/index.php?id=26&display=world&resource1=${c??document.querySelector('.alert-success a[href^="https://politicsandwar.com/index.php"]').href.split("?")[1].split("&").find(t=>t.startsWith("resource1="))?.split("=")[1]}&buysell=${["buy","sell"][parseInt(localStorage.getItem("Doc_MarketView"))]??""}&ob=price&od=DEF&maximum=100&minimum=0&search=Go`;else if(c&&document.querySelector("form#createTrade")){localStorage.removeItem("!Doc_CT2");let t=document.querySelector("form#createTrade");if(t.scrollIntoView({behavior:"smooth",block:"center"}),t.addEventListener("submit",e=>{if(r){let n=document.querySelector("input#priceper").valueAsNumber;n!==r&&localStorage.setItem("!Doc_CT3",`${n}`)}o&&o>=1e8&&document.querySelector("input#amount").valueAsNumber===1e8&&localStorage.setItem("!Doc_CT2","0")}),r&&document.querySelector("input#priceper").setAttribute("value",`${r}`),o&&document.querySelector("input#amount").setAttribute("value",`${Math.min(o,1e8)}`),a){document.querySelector(`button[data-target="#${a==="s"?"buy":"sell"}Confirmation"]`).remove();let e=document.querySelector(`button[data-target="#${a==="s"?"sell":"buy"}Confirmation"]`);e.style.setProperty("border-radius","6px"),e.setAttribute("type","submit"),e.setAttribute("name","submit"),e.setAttribute("value",a==="s"?"Sell":"Buy"),e.removeAttribute("data-target");let n=parseInt(localStorage.getItem("!Doc_CT1")??"0")-new Date().getTime();n>0&&(e.toggleAttribute("disabled",!0),u(n).then(()=>e.toggleAttribute("disabled",!1)))}}
//# sourceMappingURL=data:application/json;base64,
